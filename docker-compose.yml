services:
  bluenaas:
    image: bluenaas-single-cell-svc
    container_name: http-svc
    env_file: "./.env.local"
    build:
      dockerfile: ./Dockerfile.dev
    command:
      [
        "uvicorn",
        "bluenaas.app:app",
        "--host=0.0.0.0",
        "--port=8000",
        "--reload",
      ]
    environment:
      - DEBUG=True
      - PYTHONUNBUFFERED=1
    volumes:
      - ${PWD}/bluenaas:/app/bluenaas
      - type: volume
        source: nfs_share
        target: /opt
        volume:
          nocopy: true
    ports:
      - "8001:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - ls
    depends_on:
      - redis
    deploy:
      replicas: 1

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - ls

  worker0:
    image: bluenaas-single-cell-svc
    container_name: worker0
    env_file: "./.env.local"
    build:
      dockerfile: ./Dockerfile.dev
    command: ["./celery.sh"]
    environment:
      - WORKER_NAME=worker0
      - PYTHONUNBUFFERED=1
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    healthcheck:
      test: "celery -A bluenaas.infrastructure.celery status || exit 1"
      interval: 12s # The status check interval shouldn't be too low. Otherwise the worker gets busy replying to status checks & simulation performance goes down.
      timeout: 10s # Status checks take ~7 seconds
      retries: 5
    volumes:
      - ${PWD}/bluenaas:/app/bluenaas
      - type: volume
        source: nfs_share
        target: /opt
        volume:
          nocopy: true
    depends_on:
      - redis
      - bluenaas
    networks:
      - ls
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1024M

  worker1:
    image: bluenaas-single-cell-svc
    container_name: worker1
    env_file: "./.env.local"
    build:
      dockerfile: ./Dockerfile.dev
    command: ["./celery.sh"]
    environment:
      - WORKER_NAME=worker1
      - PYTHONUNBUFFERED=1
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    healthcheck:
      test: "celery -A bluenaas.infrastructure.celery status || exit 1"
      interval: 12s # The status check interval shouldn't be too low. Otherwise the worker gets busy replying to status checks & simulation performance goes down.
      timeout: 10s # Status checks take ~7 seconds
      retries: 5
    volumes:
      - ${PWD}/bluenaas:/app/bluenaas
      # - ${PWD}/celert/start.sh:/app/bluenaas/celery.sh
      - type: volume
        source: nfs_share
        target: /opt
        volume:
          nocopy: true
    depends_on:
      - redis
      - bluenaas
    networks:
      - ls
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1024M

  worker2:
    image: bluenaas-single-cell-svc
    container_name: worker2
    env_file: "./.env.local"
    build:
      dockerfile: ./Dockerfile.dev
    command: ["./celery.sh"]
    environment:
      - WORKER_NAME=worker2
      - PYTHONUNBUFFERED=1
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    healthcheck:
      test: "celery -A bluenaas.infrastructure.celery status || exit 1"
      interval: 12s # The status check interval shouldn't be too low. Otherwise the worker gets busy replying to status checks & simulation performance goes down.
      timeout: 10s # Status checks take ~7 seconds
      retries: 5
    volumes:
      - ${PWD}/bluenaas:/app/bluenaas
      # - ${PWD}/celert/start.sh:/app/bluenaas/celery.sh
      - type: volume
        source: nfs_share
        target: /opt
        volume:
          nocopy: true
    depends_on:
      - redis
      - bluenaas
    networks:
      - ls
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1024M
  worker3:
    image: bluenaas-single-cell-svc
    container_name: worker3
    env_file: "./.env.local"
    build:
      dockerfile: ./Dockerfile.dev
    command: ["./celery.sh"]
    environment:
      - WORKER_NAME=worker3
      - PYTHONUNBUFFERED=1
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    healthcheck:
      test: "celery -A bluenaas.infrastructure.celery status || exit 1"
      interval: 12s # The status check interval shouldn't be too low. Otherwise the worker gets busy replying to status checks & simulation performance goes down.
      timeout: 10s # Status checks take ~7 seconds
      retries: 5
    volumes:
      - ${PWD}/bluenaas:/app/bluenaas
      # - ${PWD}/celert/start.sh:/app/bluenaas/celery.sh
      - type: volume
        source: nfs_share
        target: /opt
        volume:
          nocopy: true
    depends_on:
      - redis
      - bluenaas
    networks:
      - ls
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1024M
  worker4:
    image: bluenaas-single-cell-svc
    container_name: worker4
    env_file: "./.env.local"
    build:
      dockerfile: ./Dockerfile.dev
    command: ["./celery.sh"]
    environment:
      - WORKER_NAME=worker4
      - PYTHONUNBUFFERED=1
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    healthcheck:
      test: "celery -A bluenaas.infrastructure.celery status || exit 1"
      interval: 12s # The status check interval shouldn't be too low. Otherwise the worker gets busy replying to status checks & simulation performance goes down.
      timeout: 10s # Status checks take ~7 seconds
      retries: 5
    volumes:
      - ${PWD}/bluenaas:/app/bluenaas
      # - ${PWD}/celert/start.sh:/app/bluenaas/celery.sh
      - type: volume
        source: nfs_share
        target: /opt
        volume:
          nocopy: true
    depends_on:
      - redis
      - bluenaas
    networks:
      - ls
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1024M

  flower:
    image: mher/flower
    container_name: flower
    env_file: "./.env.local"
    ports:
      - 5555:5555
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget - tries 1 - spider http:/10.0.3.20:5555/flower/healthcheck || exit",
        ]
      interval: 10s
      timeout: 3s
      retries: 3
    depends_on:
      redis:
        condition: service_healthy
      worker0:
        condition: service_healthy
      worker1:
        condition: service_healthy
    networks:
      ls:
        ipv4_address: 10.0.3.20

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: insight
    env_file: "./.env.local"
    ports:
      - "8005:5540"
    depends_on:
      - redis
    environment:
      - REDIS_URL=${CELERY_RESULT_BACKEND}
    volumes:
      - type: volume
        source: nfs_share
        target: /db
        volume:
          nocopy: true
    networks:
      ls:
        ipv4_address: 10.0.3.22

  # monitor:
  #   image: bluenaas-single-cell-svc
  #   container_name: logs_monitor
  #   env_file: "./.env.local"
  #   build:
  #     dockerfile: ./Dockerfile.dev
  #   command: ["poetry", "run", "monitor"]
  #   environment:
  #     DEBUG: "True"
  #   volumes:
  #     - ${PWD}/bluenaas:/app/bluenaas
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   networks:
  #     - ls
  #   depends_on:
  #     - redis

volumes:
  nfs_share: {}

networks:
  ls:
    ipam:
      config:
        - subnet: 10.0.3.0/24
