ARG UV_VERSION=0.7
ARG PYTHON_VERSION=3.12
ARG PYTHON_BASE=${PYTHON_VERSION}-slim

# uv stage
FROM ghcr.io/astral-sh/uv:${UV_VERSION} AS uv

# build stage
FROM python:$PYTHON_BASE AS builder
SHELL ["bash", "-e", "-x", "-o", "pipefail", "-c"]

COPY --from=uv /uv /usr/local/bin/uv

ENV UV_LINK_MODE=copy \
  UV_COMPILE_BYTECODE=1 \
  UV_PYTHON_DOWNLOADS=never \
  UV_PYTHON=python${PYTHON_VERSION}

WORKDIR /app

# TODO: remove what's not needed
RUN apt-get update \
  && apt-get install -q -y --no-install-recommends build-essential mpich libmpich-dev libhdf5-dev \
  && rm -rf /var/lib/apt/lists/*

RUN --mount=type=cache,target=/root/.cache/uv \
  --mount=type=bind,source=uv.lock,target=uv.lock \
  --mount=type=bind,source=pyproject.toml,target=pyproject.toml <<EOT
if [ "${ENVIRONMENT}" = "prod" ]; then
  uv sync --locked --no-install-project --no-dev --group worker
elif [ "${ENVIRONMENT}" = "dev" ]; then
  uv sync --locked --no-install-project --group worker
else
  echo "Invalid ENVIRONMENT"; exit 1
fi
EOT

# run stage
FROM python:$PYTHON_BASE
SHELL ["bash", "-e", "-x", "-o", "pipefail", "-c"]

# TODO: remove what's not needed
RUN apt-get update \
  && apt-get install -q -y --no-install-recommends build-essential mpich libmpich-dev libhdf5-dev \
  && rm -rf /var/lib/apt/lists/*

RUN <<EOT
groupadd -r app
useradd -r -d /app -g app -N app
EOT

USER app
WORKDIR /app

RUN mkdir -p /app/storage/models
RUN mkdir -p /app/storage/results

ENV PATH="/app/.venv/bin:$PATH"
ENV PYTHONPATH="/app:$PYTHONPATH"

COPY --chown=app:app --from=builder /app/.venv/ .venv
COPY --chown=app:app app/ ./app
COPY --chown=app:app circuit_model/ /app/circuit_model

RUN python -m compileall .

STOPSIGNAL SIGINT

CMD ["rq", "worker", "high", "default", "low"]
