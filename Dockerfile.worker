FROM python:3.12-slim

SHELL ["bash", "-e", "-x", "-o", "pipefail", "-c"]

RUN pip install poetry==2.1.3

RUN ldd --version

ENV POETRY_NO_INTERACTION=1 \
  POETRY_VIRTUALENVS_IN_PROJECT=1 \
  POETRY_VIRTUALENVS_CREATE=1 \
  POETRY_CACHE_DIR=/tmp/bluenaas-cache

WORKDIR /app

RUN <<EOT
groupadd -r app
useradd -r -d /app -g app -N app
EOT

RUN apt-get update \
  && apt-get install -q -y --no-install-recommends build-essential mpich libmpich-dev libhdf5-dev \
  && rm -rf /var/lib/apt/lists/*

COPY --chown=app:app pyproject.toml poetry.lock ./

RUN --mount=type=cache,target=$POETRY_CACHE_DIR poetry install --no-root --only main --no-interaction

# RUN pip install --upgrade pip setuptools wheel setuptools-scm
# RUN pip install --no-binary=libsonata libsonata

RUN mkdir -p /opt/bluenaas/models

RUN chown -R app:app /app

ENV VIRTUAL_ENV=/app/.venv \
  PATH="/app/.venv/bin:$PATH"

USER app

COPY --chown=app:app ./bluenaas /app/bluenaas

COPY --chown=app:app ./circuit_model /app/circuit_model

RUN python -m compileall ./bluenaas

EXPOSE 8000

STOPSIGNAL SIGINT
# CMD ["rq", "worker", "-w", "rq.worker.SpawnWorker", "high", "default", "low"]
CMD ["rq", "worker", "high", "default", "low"]
